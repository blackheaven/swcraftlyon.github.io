<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Compte-rendus des software crafters de Lyon</title>
    <link>https://swcraftlyon.github.io/posts/</link>
    <description>Recent content in Posts on Compte-rendus des software crafters de Lyon</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr-FR</language>
    <lastBuildDate>Fri, 14 Feb 2020 13:44:25 +0200</lastBuildDate>
    
	<atom:link href="https://swcraftlyon.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Coding Dojo Vendredi 14 Février 2020</title>
      <link>https://swcraftlyon.github.io/posts/2020-02-14-coding-dojo/</link>
      <pubDate>Fri, 14 Feb 2020 13:44:25 +0200</pubDate>
      
      <guid>https://swcraftlyon.github.io/posts/2020-02-14-coding-dojo/</guid>
      <description>  Sujet : Racing Car Katas (https://github.com/emilybache/Racing-Car-Katas) Format : Mob programming Langage : Javascript Nombre de participants : 7  Retours participants :  Que se passe-t-il si le sensor ne renvoie pas un nombre ?! On fait ce qui était attendu, on a enlevé l&amp;rsquo;aléatoire du sensor très rapidement et on est passé à côté de la difficulté En Javascript, l&amp;rsquo;orienté objet ne semble pas très intéressant En Javascript, on peut faire de l&amp;rsquo;OO ou du fonctionnel c&amp;rsquo;est au équipe de choisir Javascript n&amp;rsquo;était pas forcément adapté pour montrer le SOLID Double Mock Stub se mettre d&amp;rsquo;accord, certains préfère utiliser la lib d&amp;rsquo;autre le double ne dérange pas  ROTI :  5&amp;frasl;5 -&amp;gt; 2 4&amp;frasl;5 -&amp;gt; 1 3&amp;frasl;5 -&amp;gt; 4  </description>
    </item>
    
    <item>
      <title>Example Mapping Lundi 27 Janvier 2020</title>
      <link>https://swcraftlyon.github.io/posts/2020-01-27-ddd/</link>
      <pubDate>Mon, 27 Jan 2020 13:44:25 +0200</pubDate>
      
      <guid>https://swcraftlyon.github.io/posts/2020-01-27-ddd/</guid>
      <description>Sujet : Example mapping animé par Bruno BOUCARD Format : Atelier Nombre de participants : 28  Objectifs :  Faire émerger les règles, les illustrer avec des exemples. Faciliter les développements en rendant les règles explicites. 25 minutes par US max. (peut être plus long les premières fois) Un langage compréhensible par les personnes non-tech impliquées dans le projet.  Retours participants :  Beaucoups de questions sur la granularité (même débat que sur la granularité des tests unitaires).</description>
    </item>
    
    <item>
      <title>Coding Dojo Mardi 21 Janvier 2020</title>
      <link>https://swcraftlyon.github.io/posts/2020-01-21-coding-dojo/</link>
      <pubDate>Fri, 17 Jan 2020 13:44:25 +0200</pubDate>
      
      <guid>https://swcraftlyon.github.io/posts/2020-01-21-coding-dojo/</guid>
      <description>Sujet : GuildedRose (https://github.com/emilybache/GildedRose-Refactoring-Kata) Format : Pair programming Langage : Postgresql Nombre de participants : 14  Version utilisé, car pr non mergé : https://github.com/fpellet/GildedRose-Refactoring-Kata branch plpgsql_pgtap
Retours participants :  Que faire du golden master une fois le refacto terminé ? On va chercher à le supprimer. Le golden master est &amp;ldquo;fragile&amp;rdquo; à l&amp;rsquo;ajout d&amp;rsquo;une nouvelle feature / évolution. Besoin de visualisation du coverage + mutation based testing pour s&amp;rsquo;assurer que le golden couvre bien tous les cas.</description>
    </item>
    
    <item>
      <title>Coding Dojo Vendredi 17 Janvier 2020</title>
      <link>https://swcraftlyon.github.io/posts/2020-01-17-coding-dojo/</link>
      <pubDate>Fri, 17 Jan 2020 13:44:25 +0200</pubDate>
      
      <guid>https://swcraftlyon.github.io/posts/2020-01-17-coding-dojo/</guid>
      <description>  Sujet : TicTacToe (https://github.com/AgileTechPraxis/CodeSmells) Format : Mob programming Langage : C# Nombre de participants : 9  Retours participants :  Similaire au travail quotidien, on élimine des smells et bugs potentiels Plus accessible que le Gilded Rose Bien reçu par les moins expérimentés Beaucoup de complexité/bugs potentiels à cause de la façon dont est stocké l&amp;rsquo;état du système Difficultés à faire des baby steps lors des refactos Volonté tout de même de chercher des étapes plus petites Groupe de 9 personne bien pour ce format : tout le monde s&amp;rsquo;est exprimé, a pu participer Le groupe a bien ciblé les smells qui souhaitait adresser Un peu rapide pour certains, aurait mérité d&amp;rsquo;expliquer les smells  ROTI :  5&amp;frasl;5 -&amp;gt; 3 4&amp;frasl;5 -&amp;gt; 5 3&amp;frasl;5 -&amp;gt; 1  </description>
    </item>
    
    <item>
      <title>DDD Lundi 9 Décembre 2019</title>
      <link>https://swcraftlyon.github.io/posts/2019-12-09-ddd/</link>
      <pubDate>Mon, 09 Dec 2019 19:06:45 +0200</pubDate>
      
      <guid>https://swcraftlyon.github.io/posts/2019-12-09-ddd/</guid>
      <description>Sujets: Event Modeling Format: Atelier
22 Participants
Déroulement Atelier pendant 1h30 + 30 minutes d&amp;rsquo;échange. Pour l&amp;rsquo;atelier, deux groupes ont été formés et dans chacun des groupes, une personne joue le rôle pour PO pour présenter une ébauche de solution.
Retour des participants ROTI
 3&amp;frasl;5 -&amp;gt; 2 4&amp;frasl;5 -&amp;gt; 15 5&amp;frasl;5 -&amp;gt; 5  Atelier intéressant.
Contrairement à l&amp;rsquo;eventstorming, le but de l&amp;rsquo;atelier est d&amp;rsquo;explorer l&amp;rsquo;espace des solutions et non celui des problèmes.</description>
    </item>
    
    <item>
      <title>Coding Dojo 02 12 2019</title>
      <link>https://swcraftlyon.github.io/posts/2019-12-02-coding-dojo/</link>
      <pubDate>Mon, 02 Dec 2019 20:33:54 +0100</pubDate>
      
      <guid>https://swcraftlyon.github.io/posts/2019-12-02-coding-dojo/</guid>
      <description>Sujet : Diamond Kata Format : Pair programming Langage : Java, C#, Scala, TypeScript, Swift Nombre de participants : 20  Retours participants Tous le monde n&amp;rsquo;est pas arrivé au bout. Micro-steps : difficile en partant en mode &amp;ldquo;voilà le diamant que l&amp;rsquo;on attend&amp;rdquo;. Stratégie : pleins de petites méthodes utilitaires -&amp;gt; approche outside-in (beaucoup utilisé) -&amp;gt; petites méthodes testées -&amp;gt; tests spécifiques à ces méthodes peuvent être supprimés une fois le diamant généré</description>
    </item>
    
    <item>
      <title>DDD Mercredi 27 Novembre 2019</title>
      <link>https://swcraftlyon.github.io/posts/2019-11-27-ddd/</link>
      <pubDate>Wed, 27 Nov 2019 19:06:45 +0200</pubDate>
      
      <guid>https://swcraftlyon.github.io/posts/2019-11-27-ddd/</guid>
      <description>Format : Présentation par Thomas + Forum ouvert
18 Participants
Sujets :
Présentation de Thomas Lien vers les slides
Opération invalide sur les aggrégats &amp;ldquo;Ça dépend&amp;rdquo;, du métier et du language. Les code retours permettent de suivre le chemin logique. Les exceptions court-circuitent la logique et permettent de se concentrer sur les cas qui marchent. On peut demander au métier ce qui est attendu quand l&amp;rsquo;exception est lancé.
Le métier n&amp;rsquo;est pas infini Le métier a des contraintes, les types primitives ne conviennent pas on peut utiliser les types pour contraindre le métier.</description>
    </item>
    
    <item>
      <title>Global Code Retreat Samedi 16 November 2019</title>
      <link>https://swcraftlyon.github.io/posts/2019-11-16-global-code-retreat/</link>
      <pubDate>Sat, 16 Nov 2019 09:43:18 +0200</pubDate>
      
      <guid>https://swcraftlyon.github.io/posts/2019-11-16-global-code-retreat/</guid>
      <description>Sujet : Langton Ant Format : Pair programming Langage : Java, Python, C++, Scala, TypeScript, F#, Kotlin Nombre de participants : 25  Objectif  Améliorer nos pratiques de code  Déroulement  Présentation du sujet 6 itérations de 45 minutes avec une contrainte différente à chaque itération suivie de 15 minutes de debrief TDD et pair/mob programming à chaque itération  Itération 1 : Mise en place Compliqué à lancer, approche TDD difficile quand pas l&amp;rsquo;habitude.</description>
    </item>
    
    <item>
      <title>Coding Dojo Lundi 21 Octobre 2019</title>
      <link>https://swcraftlyon.github.io/posts/2019-10-21-coding-dojo/</link>
      <pubDate>Mon, 21 Oct 2019 20:28:33 +0200</pubDate>
      
      <guid>https://swcraftlyon.github.io/posts/2019-10-21-coding-dojo/</guid>
      <description>Sujet : Pair programming Format : Pair + 1 Trinôme Langage : TypeScript, Java, C#, F# Nombre de participants : 19  Retours participants :
 me suis bien amusé la pétanque, c&amp;rsquo;est plus facile types algébriques très très compliqués frustrant car le code pas à soi et donc il faut repartir de zéro à chaque fois - choix de juste expliquer le besoin fonctionnel difficultés entre le code et explication fonctionnelle d&amp;rsquo;autres groupe plus dans l&amp;rsquo;accompagnement de l&amp;rsquo;algo frustrant car kata jamais fait =&amp;gt; du coup difficile de voir le côté en aveugle frustrant car kata trop connu certains devaient s&amp;rsquo;accrocher quand la personne connaissait bien le kata certains se pliaient vraiment à ce que la personne disait de faire et du coup se laissait aller à de nouvelles solutions le groupe de 3 considère avoir eu des échanges plus poussés difficile de raisonner sans le code sous les yeux surtout lors d&amp;rsquo;un refacto jeux d&amp;rsquo;échecs à l&amp;rsquo;aveugle Roti : 11 à 4&amp;frasl;5 et 8 à 3&amp;frasl;5, soit une moyenne de 3.</description>
    </item>
    
    <item>
      <title>DDD Mercredi 9 Octobre 2019</title>
      <link>https://swcraftlyon.github.io/posts/2019-10-09-ddd/</link>
      <pubDate>Wed, 09 Oct 2019 19:06:45 +0200</pubDate>
      
      <guid>https://swcraftlyon.github.io/posts/2019-10-09-ddd/</guid>
      <description>Format : Forum ouvert
17 Participants
Sujets choisis :
DDD Comment adopter le DDD, comment le vendre ? Pas besoin d&amp;rsquo;un petit projet (1 semaine, 3 semaines ou 6 mois ?). Les problématiques métiers complexes sont envisageables.
Comment définir le DDD -&amp;gt; différences entre pattern tactiques et stratégiques.
Est-ce beaucoup utilisé ? Il y a beaucoup de ressources sur internet, sur le bassin lyonnais il existe des entreprises qui accompagnent.</description>
    </item>
    
    <item>
      <title>Coding Dojo du soir du mardi 24 septembre 2019</title>
      <link>https://swcraftlyon.github.io/posts/2019-09-24-coding-dojo/</link>
      <pubDate>Tue, 24 Sep 2019 13:24:29 +0200</pubDate>
      
      <guid>https://swcraftlyon.github.io/posts/2019-09-24-coding-dojo/</guid>
      <description>Première heure: (Animé par Romain)  Sujet : Kata Employee-report Objectif : Challenger les participants sur leur manière d&amp;rsquo;écrire une assertion Format : Pair Langages : Java, C#, JavaScript Nombre de participants : 15  Retours participants :
 Complexe sans syntaxe fluent Assertions couplées à la donnée : une évolution du comportement peut faire échouer les tests existants Plusieurs stratégies :  créer des données &amp;ldquo;attendues&amp;rdquo; statiques test plus dynamique (propriété) -&amp;gt; plus facile d&amp;rsquo;écrire un test par comportement attendu  Un test par comportement ?</description>
    </item>
    
    <item>
      <title>Session Domain Driven Design Mercredi 11 Septembre 2019</title>
      <link>https://swcraftlyon.github.io/posts/2019-09-11-ddd/</link>
      <pubDate>Wed, 11 Sep 2019 10:38:45 +0200</pubDate>
      
      <guid>https://swcraftlyon.github.io/posts/2019-09-11-ddd/</guid>
      <description>Format :
 Forum ouvert  34 participants (avec Greg et Adam)
What is a bounded context? Is it the same to speak Canadian in France or in Canada? When a word ain&amp;rsquo;t the same for different people, they don&amp;rsquo;t need the same software to be built. Domain models belong in a context, we solve the problem in a bounded context. It removes complexity. When adding a new concept that encompass all bounded context will create a new system.</description>
    </item>
    
    <item>
      <title>Coding Dojo pause repas du lundi 22 juillet 2019</title>
      <link>https://swcraftlyon.github.io/posts/2019-07-22-coding-dojo/</link>
      <pubDate>Thu, 01 Aug 2019 17:05:00 +0200</pubDate>
      
      <guid>https://swcraftlyon.github.io/posts/2019-07-22-coding-dojo/</guid>
      <description>Sujet : Kata SuperMarket Format : Mob programming Langage : C# Nombre de participants : 8  Objectif:
 S&amp;rsquo;améliorer à refactorer le code Découvrir ce kata d&amp;rsquo;Emily Bache  Déroulement:
 Présentation du kata Recherche tout ensemble des codes smells (code posant problème). Explication en quand ils posent problème pour chacun d&amp;rsquo;eux. Début du refactoring en prenant les codes smells un par un, après les avoir priorisés.  Retours participants :</description>
    </item>
    
    <item>
      <title>Coding Dojo Mardi 16 juillet 2019</title>
      <link>https://swcraftlyon.github.io/posts/2019-07-16-coding-dojo/</link>
      <pubDate>Tue, 16 Jul 2019 22:06:02 +0200</pubDate>
      
      <guid>https://swcraftlyon.github.io/posts/2019-07-16-coding-dojo/</guid>
      <description>Sujet : Kata Tennis Refactoring d&amp;rsquo;Emily Bache Format : Evil Mob Programming.
Parmi les participants se cachent des saboteurs. Ils ont pour but d&amp;rsquo;empêcher le déroulement de la session. Ils ne doivent pas se faire remarquer.
 Langages : un groupe de 13 personnes en Java, un groupe de 10 personnes en JavaScript
 Nombre de participants total : 23
  Retours participants :
 Ce qui permet de faire avancer la session</description>
    </item>
    
    <item>
      <title>DDD Lundi 8 Juillet 2019</title>
      <link>https://swcraftlyon.github.io/posts/2019-07-08-ddd/</link>
      <pubDate>Mon, 08 Jul 2019 19:06:45 +0200</pubDate>
      
      <guid>https://swcraftlyon.github.io/posts/2019-07-08-ddd/</guid>
      <description>Sujets :
Introduction aux concepts du DDD par la maïeutique de groupe Introduction de la vision de ce qu&amp;rsquo;est le DDD pour les participants qui le pratique.
Beaucoup de discussions sur le cas d&amp;rsquo;un participant qui a du mal à introduire le DDD dans son entreprise. Certains relèvent que ce n&amp;rsquo;est pas forcément un problème de métier, mais aussi un problème de communication, on propose alors beaucoup de différentes méthodes : Event Storming, Mob Programming, Story Mapping.</description>
    </item>
    
    <item>
      <title>Session Domain Driven Design Mercredi 26 Juin 2019</title>
      <link>https://swcraftlyon.github.io/posts/2019-06-26-ddd/</link>
      <pubDate>Wed, 26 Jun 2019 10:38:45 +0200</pubDate>
      
      <guid>https://swcraftlyon.github.io/posts/2019-06-26-ddd/</guid>
      <description>Sujets :
 Architecture Hexagonale par Nicolas Grisey Demengel @Malt Forum ouvert  16 participants
Architecture Hexagonale par Nicolas Grisey Demengel @Malt Nicolas Grisey Demengel @Malt nous a présenté un retour d&amp;rsquo;expérience sur l&amp;rsquo;architecture hexagonale.
Après un rappel des principes, il nous a expliqué pourquoi et comment il a poussé et mis en place cette technique, et les résultats concrets sur le travail de l&amp;rsquo;équipe et ses livraisons.
Vous pouvez retrouver les slides.</description>
    </item>
    
    <item>
      <title>Coding Dojo Jeudi 20 Juin 2019</title>
      <link>https://swcraftlyon.github.io/posts/2019-06-20-coding-dojo/</link>
      <pubDate>Thu, 20 Jun 2019 20:45:05 +0200</pubDate>
      
      <guid>https://swcraftlyon.github.io/posts/2019-06-20-coding-dojo/</guid>
      <description>Sujet : Task list - Primitive obsession Format : Pair programming Langage : Java - Scala - Ruby Nombre de participants : 16  Retours participants :
 D&amp;rsquo;abord vérifer que ça compile, puis rajouter la deadline en type union (scala : un ensemble fermé de valeur, un peu comme une enum), gérer la liste de task (ou project liste ?) Bien galérer sur les tests, difficulté à comprendre ce qui est testé vraiment L&amp;rsquo;immutabilité c&amp;rsquo;est bien Une deadline encapsule une date, ajouter un taskId (vraiment utile ?</description>
    </item>
    
    <item>
      <title>Coding Dojo Mardi 11 Juin 2019</title>
      <link>https://swcraftlyon.github.io/posts/2019-06-11-coding-dojo/</link>
      <pubDate>Tue, 11 Jun 2019 13:44:25 +0200</pubDate>
      
      <guid>https://swcraftlyon.github.io/posts/2019-06-11-coding-dojo/</guid>
      <description> Sujet : Consumer Kata d&amp;rsquo;Emily Bache Format : Mob programming Langage : Java Nombre de participants : 6  Retours participants :
 Manque de temps pour aller au bout Contrainte de limiter à une interface permet de se concentrer sur ce qu&amp;rsquo;il faut Frustration de ne pas pouvoir aller loin Golden master pas applicable dans ce cas Le code semble tellement pourri qu&amp;rsquo;avec les besoins fonctionnels on pourrait le faire de zéro Peut se faire devant un tableau blanc pour comprendre ce qu&amp;rsquo;il se passe Consumer / Customer amène confusion Kata intéressant, avoir plein de points de vue Kata pas évident : pelote de laine à démêler, mais ça fait parti d&amp;rsquo;un projet normal Cool de pouvoir partager les tips de raccourci Kata qui pousse à explorer différentes manières de découvrir des besoins fonctionnels et c&amp;rsquo;est pas toujours facile Difficile de s&amp;rsquo;accrocher pour un débutant  </description>
    </item>
    
    <item>
      <title>Coding Dojo Mardi 28 Mai 2019</title>
      <link>https://swcraftlyon.github.io/posts/2019-05-28-coding-dojo/</link>
      <pubDate>Tue, 28 May 2019 20:28:33 +0200</pubDate>
      
      <guid>https://swcraftlyon.github.io/posts/2019-05-28-coding-dojo/</guid>
      <description>Sujet : Guilded Rose animé par Colin Format : Pair + Mob Langage : Java, PHP, etc. Nombre de participants : 18  Retours participants :
 Feedback rapide avec le golden master (encore faut-il avoir un golden master !) Sans le jeu de données c&amp;rsquo;est difficile La deuxième fois, c&amp;rsquo;est vraiment beaucoup plus simple Pas de bug dans le code d&amp;rsquo;origine -&amp;gt; plutôt voir le kata Trivia pour expérimenter En essayant avec les tests unitaires en premier : meilleure granularité sur les règles métiers qui échouent.</description>
    </item>
    
    <item>
      <title>Introduction des compte-rendus des software crafters</title>
      <link>https://swcraftlyon.github.io/posts/my-first-post/</link>
      <pubDate>Sat, 25 May 2019 13:02:24 +0200</pubDate>
      
      <guid>https://swcraftlyon.github.io/posts/my-first-post/</guid>
      <description>Suite à notre visite aux crafters de Paris et aux retours de plusieurs personnes, nous avons décidé de commencer à faire des compte-rendus de séances. Laisser trace des sessions et grandir de nos expériences passées.
Pour chaque kata, nous noterons les éléments suivants s&amp;rsquo;ils sont pertinents :
 Le sujet Le format Le langage Le nombre de participants Une retrospective de la session par les participants  Cela implique que pour chaque session, il y ait un poste avec le dépôt git des compte-rendus et que quelqu&amp;rsquo;un s&amp;rsquo;en occupe.</description>
    </item>
    
  </channel>
</rss>